import { TestCase } from "@juniper-lib/testing/tdd/TestCase";
export declare class BinarySearchTests extends TestCase {
    #private;
    test_AscendingSort(): void;
    test_DescendingSort(): void;
    test_AscendingSearchingEmpty(): void;
    test_AscendingSearchingMissBeforeBeginning(): void;
    test_AscendingSearchingMatchBeginning(): void;
    test_AscendingSearchingMissAfterBeginning(): void;
    test_AscendingSearchingMatchMiddle(): void;
    test_AscendingSearchingMissBeforeEnd(): void;
    test_AscendingSearchingMatchEnd(): void;
    test_AscendingSearchingMissAfterEnd(): void;
    test_AscendingAppendingRunAtBeginning(): void;
    test_AscendingAppendingRunAtMiddle(): void;
    test_AscendingAppendingRunAtEnd(): void;
    test_AscendingAppendingLongerRunAtBeginning(): void;
    test_AscendingAppendingLongerRunAtMiddle(): void;
    test_AscendingAppendingLongerRunAtEnd(): void;
    test_AscendingAppendingLongererRunAtBeginning(): void;
    test_AscendingAppendingLongererRunAtMiddle(): void;
    test_AscendingAppendingLongererRunAtEnd(): void;
    test_AscendingPrependingRunAtBeginning(): void;
    test_AscendingPrependingRunAtMiddle(): void;
    test_AscendingPrependingRunAtEnd(): void;
    test_AscendingPrependingLongerRunAtBeginning(): void;
    test_AscendingPrependingLongerRunAtMiddle(): void;
    test_AscendingPrependingLongerRunAtEnd(): void;
    test_AscendingPrependingLongererRunAtBeginning(): void;
    test_AscendingPrependingLongererRunAtMiddle(): void;
    test_AscendingPrependingLongererRunAtEnd(): void;
    test_DescendingSearchingEmpty(): void;
    test_DescendingSearchingMissAfterEnd(): void;
    test_DescendingSearchingMatchEnd(): void;
    test_DescendingSearchingMissBeforeEnd(): void;
    test_DescendingSearchingMatchMiddle(): void;
    test_DescendingSearchingMissAfterBeginning(): void;
    test_DescendingSearchingMatchBeginning(): void;
    test_DescendingSearchingMissBeforeBeginning(): void;
    test_DescendingAppendingRunAtBeginning(): void;
    test_DescendingAppendingRunAtMiddle(): void;
    test_DescendingAppendingRunAtEnd(): void;
    test_DescendingAppendingLongerRunAtBeginning(): void;
    test_DescendingAppendingLongerRunAtMiddle(): void;
    test_DescendingAppendingLongerRunAtEnd(): void;
    test_DescendingAppendingLongererRunAtBeginning(): void;
    test_DescendingAppendingLongererRunAtMiddle(): void;
    test_DescendingAppendingLongererRunAtEnd(): void;
    test_DescendingPrependingRunAtBeginning(): void;
    test_DescendingPrependingRunAtMiddle(): void;
    test_DescendingPrependingRunAtEnd(): void;
    test_DescendingPrependingLongerRunAtBeginning(): void;
    test_DescendingPrependingLongerRunAtMiddle(): void;
    test_DescendingPrependingLongerRunAtEnd(): void;
    test_DescendingPrependingLongererRunAtBeginning(): void;
    test_DescendingPrependingLongererRunAtMiddle(): void;
    test_DescendingPrependingLongererRunAtEnd(): void;
}
//# sourceMappingURL=binarySearch.d.ts.map